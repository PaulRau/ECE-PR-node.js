// Generated by CoffeeScript 1.10.0
(function() {
  var LevelStore, app, authCheck, bodyparser, express, metrics, morgan, session, user;

  bodyparser = require('body-parser');

  express = require('express');

  morgan = require('morgan');

  session = require('express-session');

  LevelStore = require('level-session-store')(session);

  app = express();

  metrics = require('./metrics');

  user = require('./user');

  app.set('port', 1889);

  app.set('views', __dirname + "/../views");

  app.set('view engine', 'jade');

  app.use(morgan);

  app.use(bodyparser.json());

  app.use(bodyparser.urlencoded());

  app.use('/', express["static"](__dirname + "/../public"));

  app.use(session({
    secret: 'MyAppSecret',
    store: new LevelStore('./db/sessions'),
    resave: true,
    saveUnitialized: true
  }));

  authCheck = function(request, response, next) {
    if (request.session.loggedIn !== true) {
      return response.redirect('/login');
    } else {
      return next();
    }
  };

  app.get('/', authCheck, function(request, response) {
    return response.render('index', {
      name: "{request.session.username}",
      title: "Paul & Sterling's Test Page"
    });
  });

  app.get('/metrics.json', function(request, response) {
    return response.status(200).JSON(metrics.get());
  });

  app.get('/hello/:name', function(request, response) {
    return response.status(200).send(request.params.name);
  });

  app.get('/login', function(request, response) {
    return response.render('login');
  });

  app.post('login', function(request, response) {
    return user.get(request.body.username, function(error, data) {
      if (error) {
        throw error;
      }
      if (request.body.password !== data.password) {
        return response.redirect('/login');
      } else {
        request.session.loggedIn = true;
        request.session.username = request.body.username;
        return response.redirect('/');
      }
    });
  });

  app.get('/signup', function(request, response) {
    return response.render('signup');
  });

  app.post('signup', function(request, response) {
    user.save(request.body.username, request.body.password, request.body.email, request.body.name);
    if (error) {
      throw error;
    }
    if (request.body.password !== data.password) {
      return reponse.redirect('/signup');
    } else {
      request.session.loggedIn = true;
      request.session.username = request.body.username;
      return response.redirect('/');
    }
  });

  app.post('/metrics/:id.json', function(request, response) {
    return metric.save(request.params.id, request.body, function(error) {
      if (err) {
        response.status(500).json(error);
      }
      return response.status(200).send("Metrics Saved");
    });
  });

  app.listen(app.get('port'), function() {});

  console.log("server listening on " + (app.get('port')));

}).call(this);
